---
import Layout from '../layouts/Layout.astro';
import type { Patient } from '../types/PatientDTO';
import { fetchAllPatients } from '../data/mockPatients';

const patients = await fetchAllPatients();

function calculateNEWS2(patient: Patient): number {
  let score = 0;
  if (patient.respiratoryRate > 20) score += 2;
  if (patient.oxygenSaturation < 92) score += 3;
  else if (patient.oxygenSaturation < 96) score += 1;
  if (patient.temperature > 38 || patient.temperature < 36) score += 1;
  if (patient.systolicBP < 110) score += 2;
  if (patient.heartRate > 100 || patient.heartRate < 60) score += 1;
  if (patient.consciousness !== 'Alert') score += 3;
  if (patient.supplementalO2) score += 2;
  return score;
}

function getNews2Risk(score: number) {
  if (score <= 4) return { label: 'Low', color: '#22c55e' };
  if (score <= 6) return { label: 'Medium', color: '#eab308' };
  if (score <= 8) return { label: 'High', color: '#f97316' };
  return { label: 'Critical', color: '#ef4444' };
}

const filterOptions = ['All', 'Critical', 'Medium'];
---

<style>
  .overview-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2.5em 1em 2em 1em;
  }
  .overview-title {
    font-size: 2.2em;
    font-weight: 800;
    color: #1d4ed8;
    margin-bottom: 0.7em;
    text-align: center;
    letter-spacing: 0.01em;
  }
  .patient-list {
    display: flex;
    flex-direction: column;
    gap: 1.5em;
    margin: 0 auto;
    max-width: 700px;
  }
  .patient-card {
    display: flex;
    align-items: center;
    background: #fff;
    border-radius: 14px;
    box-shadow: 0 2px 16px #1e293b0a;
    padding: 1.2em 1.5em;
    gap: 1.5em;
    transition: box-shadow 0.2s;
    min-height: 90px;
  }
  .patient-card:hover {
    box-shadow: 0 4px 32px #1d4ed822;
  }
  .patient-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: linear-gradient(135deg, #60a5fa 60%, #1d4ed8 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5em;
    color: #fff;
    font-weight: 700;
    margin-right: 1.2em;
    box-shadow: 0 1px 4px #1d4ed822;
    flex-shrink: 0;
  }
  .patient-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 0.2em;
    min-width: 0;
  }
  .patient-name {
    font-size: 1.15em;
    font-weight: 700;
    color: #1e293b;
  }
  .patient-age {
    color: #64748b;
    font-size: 1em;
    font-weight: 500;
  }
  .patient-actions {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1em;
    margin-left: auto;
    border-left: none;
    padding-left: 0;
    margin-left: 0;
    height: auto;
  }
  .news2-score-label {
    font-size: 1em;
    font-weight: 600;
    color: #64748b;
    margin: 0 0.2em 0 0;
    min-width: 80px;
    text-align: left;
    display: inline-block;
    margin-right: auto;
    white-space: nowrap;
  }
  .news2-score-badge {
    font-size: 1.3em;
    font-weight: 800;
    border-radius: 8px;
    padding: 0.3em 0.8em;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    flex-shrink: 0;
  }
  .news2-score-badge.low { background: #22c55e; }
  .news2-score-badge.medium { background: #eab308; color: #1e293b; }
  .news2-score-badge.high { background: #f97316; }
  .news2-score-badge.critical { background: #ef4444; }
  .patient-link {
    text-decoration: none;
    color: #1d4ed8;
    font-weight: 600;
    font-size: 1.1em;
    background: #e0e7ef;
    border-radius: 8px;
    padding: 0.5em 1.2em;
    transition: background 0.2s, color 0.2s;
    margin: 0.3em 0 0 0;
    display: inline-block;
    flex-shrink: 0;
  }
  .patient-link:hover {
    background: #1d4ed8;
    color: #fff;
  }
  @media (max-width: 700px) {
    .overview-container { padding: 1.2em 0.2em; }
    .patient-list { max-width: 100%; }
    .patient-card { flex-direction: column; align-items: flex-start; gap: 0.7em; padding: 1em 0.7em; min-height: 0; }
    .patient-avatar { margin-right: 0; margin-bottom: 0.5em; }
    .news2-score-badge { margin-right: 0.4em; }
    .patient-actions { width: 100%; min-width: 0; align-items: flex-start; border-left: none; padding-left: 0; margin-left: 0; }
    .news2-score-label { min-width: 0; text-align: left; }
  }
  .filter-bar {
    display: flex;
    gap: 1em;
    justify-content: center;
    margin-bottom: 2em;
  }
  .filter-btn {
    background: #e0e7ef;
    color: #1d4ed8;
    font-weight: 600;
    border: none;
    border-radius: 8px;
    padding: 0.5em 1.5em;
    font-size: 1.08em;
    cursor: pointer;
    transition: background 0.2s, color 0.2s;
  }
  .filter-btn.active, .filter-btn:focus {
    background: #1d4ed8;
    color: #fff;
    outline: none;
  }
  .filter-btn:hover {
    background: #60a5fa;
    color: #fff;
  }
</style>

<Layout>
  <div class="overview-container">
    <div class="overview-title">NEWS2 Patient Overview</div>
    <div class="filter-bar" id="filter-bar">
      {filterOptions.map(option => (
        <button type="button" class="filter-btn" data-filter={option}>{option}</button>
      ))}
    </div>
    <div class="patient-list" id="patient-list">
      {patients.map((patient: Patient) => {
        const score = calculateNEWS2(patient);
        const risk = getNews2Risk(score);
        let riskClass = 'low';
        if (risk.label === 'Medium') riskClass = 'medium';
        else if (risk.label === 'High') riskClass = 'high';
        else if (risk.label === 'Critical') riskClass = 'critical';
        return (
          <div class="patient-card" data-risk={risk.label}>
            <div class="patient-avatar">{patient.name.split(' ').map(n => n[0]).join('').toUpperCase()}</div>
            <div class="patient-info">
              <span class="patient-name">{patient.name}</span>
              <span class="patient-age">Age: <strong>{patient.age}</strong></span>
            </div>
            <div class="patient-actions">
              <span class="news2-score-label">{risk.label} risk</span>
              <span class={`news2-score-badge ${riskClass}`}>{score}</span>
              <a href={`/news2/${patient.id}`} class="patient-link">View Details</a>
            </div>
          </div>
        );
      })}
    </div>
  </div>
  <script type="module">
    const filterBar = document.getElementById('filter-bar');
    const patientList = document.getElementById('patient-list');
    if (filterBar && patientList) {
      filterBar.addEventListener('click', (e) => {
        if (e.target && e.target.matches('button[data-filter]')) {
          const selected = e.target.getAttribute('data-filter');
          // Set active class
          filterBar.querySelectorAll('button').forEach(btn => btn.classList.remove('active'));
          e.target.classList.add('active');
          // Show/hide patients
          patientList.querySelectorAll('.patient-card').forEach(card => {
            if (selected === 'All' || card.getAttribute('data-risk') === selected) {
              card.style.display = '';
            } else {
              card.style.display = 'none';
            }
          });
        }
      });
      // Set 'All' as active by default
      filterBar.querySelector('button[data-filter="All"]').classList.add('active');
    }
  </script>
</Layout> 